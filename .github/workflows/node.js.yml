# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "master", "develop" ]
  pull_request:
    branches: [ "master", "develop" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x, 20.x, 22.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm test
    # Run static analysis on JS files
    - run: npm run eslint
    # Run static analysis on TS files
    - run: npm run tseslint

  # Checks code formatting, fails if there are changes after applying prettier.
  # Based on this example here:
  # https://github.com/creyD/prettier_action?tab=readme-ov-file#example-4-dry-run
  prettier:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # Make sure the actual branch is checked out when running on pull requests
          ref: ${{ github.head_ref }}
          # Make sure the value of GITHUB_TOKEN will not be persisted in repo's config
          persist-credentials: false

      - name: Prettify code
        uses: creyD/prettier_action@v4.3
        with:
          # "dry" causes that if any file is modified, the job fails
          dry: True
          # "write" performs changes in place
          prettier_options: --write lib/*.ts test/*.js examples/**/*.js
          github_token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
